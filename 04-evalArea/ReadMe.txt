# -*- coding: utf-8 -*-
<<< 目次 >>>
  1. 概要
  2. プログラムの仕様
  3. プログラムのビルドについて


################################################################################
# 1. 概要                                                                      #
################################################################################
このプログラムはt-Roomのキャプチャ画像から切り出し，塗り潰した頭部領域について，
指標を算出するためのものである．
このプログラムの処理は，以下の2段階から成る．
  1. 切り出した頭部の領域の重心を求める．
  2. x軸の正の方向を0度とし，0度から360度まで1度ずつ，それぞれ領域の境界となる
     位置までの距離を算出する．
この結果は，標準出力，もしくはcsvファイルに出力することができる．
また，領域の重心と，重心から各方向に向かう直線と領域境界との交点をプロットした
画像を表示，保存することができる．


################################################################################
# 2. プログラムの仕様                                                          #
################################################################################
このプログラムは以下のように用いる．
  $ ./evalArea IMAGE-FILE [option ... ]

オプションは以下のものがある．
  -c COLOR, --color=COLOR
    引数: プロットに用いる色(デフォルト値: 0xff0000)
    プロットに用いる色を指定する．
    色は16進数RGB値(0xRRGGBBの形式)を指定する．
  -f COLOR, --foreground=COLOR
    引数: 前景色(デフォルト値: 0x000000)
    画像中の領域の色．
    色は16進数RGB値(0xRRGGBBの形式)を指定する．
  -g COLOR, --gcolor=COLOR
    引数: 重心の色(デフォルト値: 0x00ff00)
    領域の重心のプロットに用いる色．
    色は16進数RGB値(0xRRGGBBの形式)を指定する．
  -h, --help
    引数: 無し
    プログラムの使い方を表示し，プログラムを終了する．
  -o FILENAME, --output=FILENAME
    引数: 出力csvファイル名
    結果を出力するcsvファイル名を指定する．
    このオプションが指定されなかったとき，結果は標準出力に出力される．
  -p FILENAME, --plot-file=FILENAME
    引数: 出力プロットファイル名(デフォルト値: 入力ファイル名に"-plotted"を加えたもの)
    塗り潰し結果の画像ファイル名を指定する．
  -s SIZE_STRING, --size=SIZE_STRING
    引数: 画像サイズ(デフォルト値: auto)
    ウィンドウに表示する塗り潰し結果の画像のサイズを指定する．
    大きすぎて，ディスプレイに画像を表示しきれないときの挙動を決定できる．
    取り得る値のフォーマットは以下の4パターンである．
      1) [数値]x[数値]
        640x320のように，縦と横の画像サイズを指定する．
      2) [数値]%
        50%のように，リザイズ後の画像の大きさをパーセントで指定する．
        画像の縦横比は維持される．
      3) original
        画像を元の大きさのまま表示する．
      4) auto
        ディスプレイの解像度から自動的に判断して，大きさを決定する．
        画像サイズは大きくても，ディスプレイの横方向の解像度の半分か，縦方向の
        解像度の半分になる(縦横比は維持される)．
        この機能はWindowsでのみ有効であり，それ以外のOSでは画像のリサイズは
        行われない．
  --nosave
    引数: 無し
    結合した結果の画像を出力しない．
  --noshow
    引数: 無し
    結合した結果の画像をウィンドウに表示しない．


################################################################################
# 3. プログラムのビルドについて                                                #
################################################################################
1) MinGWのg++を用いてビルドする場合
このディレクトリのMakefileを用いるとよい．
  $ make
とすれば，プログラムをビルドすることができる．
なお，
  $ make clean
とすれば，生成したオブジェクトファイルと実行ファイルを削除できる．
また，
  $ make ctags
とすれば，このプログラムのtagsファイルを生成する(要: ctags)．
なお，g++のバージョンは4.6以上である必要がある．

2) MSVCのcl.exeでビルドする場合
このディレクトリのMakefileを用いるとよい．
  > nmake /f msvc.mk
とすれば．4つ全てのプログラムをビルドすることができる．
なお，
  $ nmake /f msvc.mk clean
とすれば，生成したオブジェクトファイルと実行ファイルを削除できる．
また，
  $ nmake /f msvc.mk ctags
とすれば，このプログラムのtagsファイルを生成する(要: ctags)．
なお，MSVC 2010以上のバージョンである必要がある．
