# -*- coding: utf-8 -*-
<<< 目次 >>>
  1. 概要
  2. ファイル構成
  3. プログラムの仕様
  4. プログラムのビルドについて


################################################################################
# 1. 概要                                                                      #
################################################################################
このディレクトリのファイルは主にt-Roomのキャプチャ画像を評価するためのもので
ある.
主にC++で記述してある．
MinGWのg++とMSVCでビルドできることを確認している．


################################################################################
# 2. ファイル構成                                                              #
################################################################################
./
+-01-concatImage/
|   : 画像を結合するプログラム．2つのt-Roomのキャプチャ画像を結合するために用いる
+-02-edgeDetection/
|   : 画像のエッジを検出するプログラム
+-03-fillArea/
|   : 指定した色で囲まれた領域を塗り潰す
+-04-evalArea/
|   : 塗り潰された領域の評価指標を算出する
+-include/
|   : 全プログラムで共通してインクルードパスを通すディレクトリ
+-util/
|   : 全プログラムで共通して用いるユーティリティなど
+-Makefile
|   : MinGW用のMakefile．このMakefileを用いると，4つのプログラム全てをビルド
|     できる
+-ReadMe.txt
|   : 本ファイル
+-common.tags
|   : util/のtagsファイル
+-msvc.mk
|   : MSVC用のMakefile．このMakefileを用いると，4つのプログラム全てをビルド
|     できる
|     nmake用に記述してある
+-opencv_env.mk
|   : 各プログラムの子Makefileが参照するOpenCVの環境を記述したMakefile．
|     環境に合わせて，適宜書き換えること
+-opencv_env_msvc.mk
    : 各プログラムの子msvc.mkが参照するOpenCVの環境を記述したMakefile．
      環境に合わせて，適宜書き換えること


################################################################################
# 3. プログラムの仕様                                                          #
################################################################################
各プログラムのディレクトリにあるReadMe.txtを参照すること．


################################################################################
# 4. プログラムのビルドについて                                                #
################################################################################
1) MinGWのg++を用いてビルドする場合
このディレクトリのMakefileを用いるとよい．
  $ make
とすれば，4つ全てのプログラムをビルドすることができる．
なお，
  $ make clean
とすれば，生成したオブジェクトファイルと実行ファイルを削除できる．
また，
  $ make ctags
とすれば，各プログラムのtagsファイルを生成する(要: ctags)．
なお，g++のバージョンは4.6以上である必要がある．

2) MSVCのcl.exeでビルドする場合
このディレクトリのMakefileを用いるとよい．
  > nmake /f msvc.mk
とすれば．4つ全てのプログラムをビルドすることができる．
なお，
  $ nmake /f msvc.mk clean
とすれば，生成したオブジェクトファイルと実行ファイルを削除できる．
また，
  $ nmake /f msvc.mk ctags
とすれば，各プログラムのtagsファイルを生成する(要: ctags)．
なお，MSVC 2010以上のバージョンである必要がある．
